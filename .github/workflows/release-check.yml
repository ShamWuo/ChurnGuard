name: Release check

on:
  workflow_dispatch:

jobs:
  release-check:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb?schema=public
      ADMIN_SECRET: test_admin_secret
      CSRF_SECRET: test_csrf_secret
      NEXT_TELEMETRY_DISABLED: '1'
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Run migrations (deploy or push)
        run: npx prisma migrate deploy || npx prisma db push

      - name: Run unit tests
        run: npm test --silent

      - name: Build app
        run: npm run build --if-present

      - name: Start Next.js
        run: |
          PORT=3000 npm run start &
          for i in {1..30}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/api/ready || true)
            echo "ready status: $STATUS"
            if [ "$STATUS" = "200" ]; then
              echo "App ready"; break
            fi
            sleep 2
          done

      - name: Install Playwright browsers
        run: npx playwright install --with-deps || true

      - name: Run Playwright smoke tests
        run: npx playwright test --config=playwright.config.ts --grep @smoke || true
